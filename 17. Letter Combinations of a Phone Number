void solve(string digits, string output, vector<string> &ans, string mapping[], int index){
    if(index >= digits.length()){
        ans.push_back(output);
        return;
    }

    int number = digits[index] - '0';
    string value = mapping[number];

    for(int i=0; i<value.length(); i++){
        output.push_back(value[i]);
        solve(digits, output, ans, mapping, index + 1);
        output.pop_back(); //back tracking
    }
}

class Solution {
public:
    vector<string> letterCombinations(string digits) {
       string mapping[10] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs",            "tuv", "wxyz"};

        string output;
        vector<string> ans;

        if(digits.length() == 0){
            return ans;
        }

        solve(digits, output, ans, mapping, 0);
        return ans;
    }
};
