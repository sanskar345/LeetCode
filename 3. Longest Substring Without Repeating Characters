class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.length() == 1 || s.length() == 0){
            return s.length();
        }

        int start = 0;
        int end = 1;

        if(s[start] == s[end]){
            end = start;
        }

        int ans = end-start + 1;

        map<char, bool> map;

        map[s[start]] = true;
        map[s[end]] = true;

        while(start<=end && end<s.size()){
            end++;
            if(end>=s.size()){
                break;
            }
            if(map[s[end]] && map[s[end]] == true){
                while(start<=end){

                    if(s[start] == s[end]){
                        break;
                    }
                    int prev = start;
                    start++;
                    map[s[prev]] = false;

                }
                start++;
            }
            else{
                map[s[end]] = true;
            }

            ans = max(ans, end-start + 1);

        }

        return ans;
    }
};
