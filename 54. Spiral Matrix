class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {


        vector<int> ans;

        int rows = matrix.size();
        int cols = matrix[0].size();

        int startingRow = 0;
        int endingCol = cols-1;
        int endingRow = rows-1;
        int startingCol = 0;

        int total = rows * cols;
        int count = 0;

        while( count < total){

            //printing starting row
            for(int i =startingCol; i<= endingCol && count < total; i++){
                ans.push_back(matrix[startingRow][i]);
                count++;
            }
            startingRow++;
            //printing ending column

            for(int i=startingRow; i<=endingRow && count < total; i++){
                ans.push_back(matrix[i][endingCol]);
                count++;
            }
            endingCol--;

            //printing ending row

            for(int i=endingCol; i>= startingCol && count < total; i--){
                ans.push_back(matrix[endingRow][i]);
                count++;
            }

            endingRow--;

            //printing starting col

            for(int i=endingRow; i>=startingRow && count<total; i--){
                ans.push_back(matrix[i][startingCol]);
                count++;
            }
            startingCol++;


        }

        return ans;
    }
};
